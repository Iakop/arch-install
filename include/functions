#!/bin/bash
# Commonly used functions in the install script
# Author: Jacob Bechmann Pedersen
# Date: 2020-03-07

# Queries pacman for a package by name
# Returns 1, if package is not found.
pacquery() {
	pkgname=$1
	pacman -Qs $pkgname >/dev/null 2>&1
	retval=$?
	if [ $retval -ne 0 ]; then
		echo "Missing package $pkgname!"
		return 1
	else
		echo "Found package $pkgname!"
		return 0
	fi
}

# Will query pacman by a list of packages,
# passed as argument in the form of its name,
# and not dereferenced.
# Returns number of unmet dependencies.
pacquery-list() {
	list_name=$1[@]
	list=("${!list_name}")
	misses=0
	for i in "${!list[@]}"
	do
		pacquery ${list[$i]}
		misses=$[$misses+$?]
	done
	return $misses
}

#Dependencies are written in this format:
#dependencies=(\
#		"android-tools"\
#		"android-udev"\
#		"libmtp"\
#		)

prompt_yn() {
	input_prompt_yn=$1
	default_yn=$2

	status_yn=2
	while [ $status_yn -eq 2 ]; do
		read -p "$input_prompt_yn" response_yn

		if [ "${response_yn,,}" == "" ]; then
			response_yn=$default
		fi

		if [ "${response_yn,,}" == "y" ]; then
			status_yn=0
		elif [ "${response_yn,,}" == "n" ]; then
			status_yn=1	
		else
			echo "I did not understand that, please try again!"
			status_yn=2
		fi
	done
	return $status_yn
}

# Prompt for text
prompt_txt() {
	input_prompt_txt=$1
	default_txt=$2

	status_txt=1
	while [ $status_txt -eq 1 ]; do
		read -p "$input_prompt_txt" response_txt

		prompt_yn "Is \"$response_txt\" ok?" "y"
		status_txt=$?
	done

	echo "$response_txt"
}