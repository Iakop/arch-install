#!/bin/bash
# Commonly used functions in the install script
# Author: Jacob Bechmann Pedersen
# Date: 2020-03-07

# Queries pacman for a package by name
# Returns 1, if package is not found.
pacquery() {
	local pkgname=$1
	pacman -Qs $pkgname >/dev/null 2>&1
	local retval=$?
	if [ $retval -ne 0 ]; then
		echo "Missing package $pkgname!"
		return 1
	else
		echo "Found package $pkgname!"
		return 0
	fi
}

# Will query pacman by a list of packages,
# passed as argument in the form of its name,
# and not dereferenced.
# Returns number of unmet dependencies.
pacquery-list() {
	local list_name=$1[@]
	local list=("${!list_name}")
	local misses=0
	for i in "${!list[@]}"
	do
		pacquery ${list[$i]}
		misses=$[$misses+$?]
	done
	return $misses
}

#Dependencies are written in this format:
#dependencies=(\
#		"android-tools"\
#		"android-udev"\
#		"libmtp"\
#		)

# Will prompt for a yes or no: [y/n]
prompt_yn() {
	local input_prompt=$1
	local default=$2

	local y="y" #The case for Y
	local n="n" #The case for N

	if [ "${default,,}" == "y" ]; then
		y="Y"
	elif [ "${default,,}" == "n" ]; then
		n="N"
	fi

	local status=2
	local response
	while [ $status -eq 2 ]; do
		read -p "$input_prompt [$y/$n]: " response

		if [ "${response,,}" == "" ]; then
			response=$default
		fi

		if [ "${response,,}" == "y" ]; then
			status=0
		elif [ "${response,,}" == "n" ]; then
			status=1	
		else
			echo "I did not understand that, please try again!"
			status=2
		fi
	done
	return $status
}

# Prompt for text
# The prompt will then be followed by a confirmation prompt
# through prompt_yn
prompt_txt() {
	local input_prompt=$1
	local default=$2

	local status=1
	local response
	while [ $status -eq 1 ]; do
		read -p "$input_prompt: " response

		prompt_yn "Is \"$response\" ok?" $default
		status=$?
	done

	echo "$response"
}