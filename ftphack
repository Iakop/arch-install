#!/bin/bash

user="iakop"
devpc="devpc"
devpath="MyGitRepos/arch-install"

proceed="no"
while [ $proceed != "yes" ]; do
	echo -n "Please enter user password: "
	read -s password
	echo
	# Check if the ftp password is correct by just establishing connection. Before removing anything!
	curl "ftp://$user:$password@$devpc" >/dev/null 2>&1
	connectioncheck=$?
	if [ $connectioncheck -eq 0 ]; then
		proceed="yes"
		echo "Correct password!"
	elif [ $connectioncheck -eq 67 ]; then
		proceed="no"
		echo "Incorrect password, try again!"
	else
		proceed="no"
		echo "Some error occured, try again: $connectioncheck"
	fi
done

if [ -d "test" ]; then
	echo "test directory already exists!"
else
	echo "Making test directory..."
	mkdir "test"
fi
if [ -d "packages" ]; then
	echo "packages directory already exists!"
else
	echo "Making packages directory..."
	mkdir "packages"
fi
if [ -d "configscripts" ]; then
	echo "configscripts directory already exists!"
else
	echo "Making configscripts directory..."
	mkdir "configscripts"
fi

archinstall="arch-install"
archinstallpath="$archinstall"

ftphack="ftphack"
ftphackpath="$ftphack"

testpci="testpci"
testpcipath="test/$testpci"

packageslist="packages.list"
packageslistpath="packages/$packageslist"

aurpackageslist="aur-packages.list"
aurpackageslistpath="packages/$aurpackageslist"

aurkeys="aur.keys"
aurkeyspath="packages/$aurkeys"

chrootstep="chroot-step"
chrootsteppath="$chrootstep"

configscriptspath="configscripts"

# curl the new version over ftp:
curl "ftp://$user:$password@$devpc/$devpath/$archinstallpath" > $archinstallpath
curl "ftp://$user:$password@$devpc/$devpath/$ftphackpath" > $ftphackpath
curl "ftp://$user:$password@$devpc/$devpath/$testpcipath" > $testpcipath
curl "ftp://$user:$password@$devpc/$devpath/$packageslistpath" > $packageslistpath
curl "ftp://$user:$password@$devpc/$devpath/$aurpackageslistpath" > $aurpackageslistpath 
curl "ftp://$user:$password@$devpc/$devpath/$chrootsteppath" > $chrootsteppath
curl "ftp://$user:$password@$devpc/$devpath/$aurkeyspath" > $aurkeyspath

# Configscripts might change, so they are found by curl'ing an index:
configscripts=($(curl "ftp://$user:$password@$devpc/$devpath/$configscriptspath/" 2>/dev/null | awk '{print $9}'))
for config in "${configscripts[@]}"; do
	curl "ftp://$user:$password@$devpc/$devpath/$configscriptspath/$config" > $configscriptspath/$config
	chmod 755 $configscriptspath/$config
done

# Ensure the new version is executable:
chmod 755 $archinstallpath
chmod 755 $ftphackpath
chmod 755 $chrootsteppath
